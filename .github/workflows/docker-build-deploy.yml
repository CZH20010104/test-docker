name: Docker 构建与部署

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安装依赖
        run: npm ci
      
      - name: 运行测试
        run: npm test
        continue-on-error: true  # 如果没有测试或测试失败也继续执行
      
      - name: 直接使用Docker命令登录
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 构建和推送
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/vue-app:latest,${{ secrets.DOCKER_USERNAME }}/vue-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vue-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vue-app:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: 执行部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /www/wwwroot/vue-app
            docker pull ${{ secrets.DOCKER_USERNAME }}/vue-app:latest
            docker-compose down
            docker-compose up -d
            # 验证部署是否成功
            if [ $(docker ps | grep vue-app | wc -l) -eq 0 ]; then
              echo "部署失败，容器未运行"
              exit 1
            fi 